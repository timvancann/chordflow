name: Deploy

on:
  push:
    tags:
      - '*'

env:
  CARGO_TERM_COLOR: always


jobs:
  build-and-upload-tui:
    name: Build and Upload
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write

    strategy:
      matrix:
        include:
          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin
            dependencies: |
              brew install cmake portaudio pkg-config

         # - build: windows-gnu
         #   os: windows-latest
         #   target: x86_64-pc-windows-msvc
         #   dependencies: |
         #     choco install vcpkg -y
         #     vcpkg install portaudio:x64-windows

    steps: 
    - name: Clone repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: ${{ matrix.dependencies }}

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with: 
        targets: ${{ matrix.target }}

    - name: Get Version
      shell: bash
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --release --target ${{ matrix.target }}

    - name: Build Archive
      shell: bash
      run: |
        binary_name="chordflow_tui"

        dirname="${binary_name}-${{ env.VERSION }}-${{ matrix.target }}"
        mkdir ${dirname}

        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          mv target/${{ matrix.target }}/release/${binary_name}.exe ${dirname}
        else
          mv target/${{ matrix.target }}/release/${binary_name} ${dirname}
        fi
        
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          7z a "${dirname}.zip" ${dirname}
          echo "ASSET=${dirname}.zip" >> ${GITHUB_ENV}
        else
          tar -czf "${dirname}.tar.gz" ${dirname}
          echo "ASSET=${dirname}.tar.gz" >> ${GITHUB_ENV}
        fi

    - name: Upload Binaries
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ env.ASSET }}


      
  build-and-upload-mac:
    name: Desktop-MacOS
    runs-on: macos-latest

    steps: 
    - name: Clone repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: brew install cmake portaudio pkg-config

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with: 
        targets:  x86_64-apple-darwin

    - name: Install Dioxus-CLI
      shell: bash
      run: cargo install dioxus-cli
      
    - name: Get Version
      shell: bash
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Build Archive
      shell: bash
      run: |
        cd chordflow_desktop
        dx bundle --release
        
        
        app_name="ChordFlowDesktop.app"
        dmg_name="ChordFlowDesktop_${{ env.VERSION }}_aarch64.dmg"
        
        mv ../target/dx/chordflow_desktop/bundle/macos/bundle/macos/*.app ${app_name}
        mv ../target/dx/chordflow_desktop/bundle/macos/bundle/dmg/*.dmg ${dmg_name}
        
        echo "APP=${app_name}" >> ${GITHUB_ENV}
        echo "DMG=${dmg_name}" >> ${GITHUB_ENV}
        

    - name: Upload Binaries
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ env.APP }}
          ${{ env.DMG }}
          


